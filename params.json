{"name":"Random record","body":"# Getting Started\r\n\r\n**Random Record** is an add on for ActiveRecord to give Rails 3 Models the abilities to access random records\r\n\r\n## Installation\r\n\r\nRandom Record is released as a Ruby Gem. The gem is to be installed within a Ruby\r\non Rails 3 application. To install, simply add the following to your Gemfile:\r\n\r\n```ruby\r\n# Gemfile\r\ngem 'random_record'\r\n```\r\n\r\nAfter updating your bundle, you can use Random function within any ActiveRecord inherited model\r\n\r\n## Usage\r\n\r\nFor example you can do something like this in your controller (**app/controllers/users_controller.rb**), view or presenter\r\n\r\n```ruby\r\nclass UsersController < ApplicationController\r\n  RANDOM_LIMIT = 5\r\n\r\n  def index\r\n    @users = User.random(RANDOM_LIMIT)\r\n  end\r\n\r\n  def show\r\n    @user = User.random\r\n  end\r\nend\r\n```\r\n\r\n## Advanced Usage\r\n\r\n**Random Record** is _implemented_ as a **Class Method** within ActiveRecord Models\r\nand can only be attached to the end of a scope chain as it uses eager loading\r\n\r\n**What does the mean, _oh not so wise one?_**\r\n\r\nRails 3 uses ActiveRecord::Relation for chaining things like scopes, joins, where, or order on your model. This allows Rails to chain these scopes without returning the data until really needed. This is referred to as lazily loading.\r\n\r\nThis creates a contraint on the implementation of `random()` method\r\n\r\n`random()` method requires eager loading (required data has to be fetched from the database before creating a random set).\r\n\r\nThis allows us the append this random method to the end of any **Arel chain**.\r\n\r\n```ruby\r\nclass User < ActiveRecord::Base\r\n  scope :students, where(\"role = ?\", \"Student\")\r\nend\r\n\r\nclass UsersController < ApplicationController\r\n  RANDOM_LIMIT = 5\r\n\r\n  def index\r\n    @users = User.students.order(\"created_at DESC\").random(RANDOM_LIMIT)\r\n  end\r\n\r\n  def show\r\n    @user = User.where(\"role <> ?\", \"Student\").random\r\n  end\r\nend\r\n```\r\n\r\nBut it restricts us to do something like this _(use this method within a scope chain)_\r\n\r\n```ruby\r\n@user = User.random(2).where(\"role <> ?\", \"Student\") # Is not going to work\r\n```\r\n","tagline":"Adds Random Record functionality to ActiveRecord","google":"UA-30563163-1","note":"Don't delete this file! It's used internally to help with page regeneration."}